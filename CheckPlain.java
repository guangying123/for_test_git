/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Tool;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.List;
import java.io.File;
import java.util.ArrayList;

import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import Tool.Data.Node;

/**
 *
 * @author Administrator
 */
public class CheckPlain extends javax.swing.JFrame {

    /**
     * Creates new form CheckPlain
     */
    public CheckPlain() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        Header = new javax.swing.JPanel();
        DocAddrTextField = new javax.swing.JTextField();
        JarAddrTextField = new javax.swing.JTextField();
        DocAddrLabel = new javax.swing.JLabel();
        JarAddrLabel = new javax.swing.JLabel();
        DocAddrButton = new javax.swing.JButton();
        JarAddrButton = new javax.swing.JButton();
        CheckButton = new javax.swing.JButton();
        Body = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        Table2 = new javax.swing.JTable();
        Table2Label = new javax.swing.JLabel();
        Table1Label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CommMsgType消息检查工具");

        DocAddrTextField.setColumns(25);

        JarAddrTextField.setColumns(25);

        DocAddrLabel.setText("接口文档");

        JarAddrLabel.setText("Comm Jar包");

        DocAddrButton.setText("选择");
        DocAddrButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DocAddrButtonMouseClicked(evt);
            }
        });

        JarAddrButton.setText("选择");
        JarAddrButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JarAddrButtonMouseClicked(evt);
            }
        });

        CheckButton.setText("检查");
        CheckButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CheckButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout HeaderLayout = new javax.swing.GroupLayout(Header);
        Header.setLayout(HeaderLayout);
        HeaderLayout.setHorizontalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderLayout.createSequentialGroup()
                .addGroup(HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HeaderLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(DocAddrLabel)
                        .addGap(8, 8, 8))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HeaderLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(JarAddrLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HeaderLayout.createSequentialGroup()
                        .addComponent(JarAddrTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JarAddrButton))
                    .addGroup(HeaderLayout.createSequentialGroup()
                        .addComponent(DocAddrTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DocAddrButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(CheckButton)
                .addContainerGap())
        );
        HeaderLayout.setVerticalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderLayout.createSequentialGroup()
                .addGroup(HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HeaderLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DocAddrTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DocAddrLabel)
                            .addComponent(DocAddrButton))
                        .addGap(18, 18, 18)
                        .addGroup(HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JarAddrTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JarAddrLabel)
                            .addComponent(JarAddrButton)))
                    .addGroup(HeaderLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(CheckButton)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        
        
        /**
         * 表一的数据模式
         */
        mode1 =  initMode();
        			
        			
        Table1.setModel(mode1);
        Table1.setGridColor(new java.awt.Color(255, 255, 255));
        
        jScrollPane1.setViewportView(Table1);
        if (Table1.getColumnModel().getColumnCount() > 0) {
            Table1.getColumnModel().getColumn(2).setResizable(false);
        }
        
        jScrollPane1.getViewport().setBackground(Color.WHITE);
        
        /**
         * 表2的数据
         */
        mode2 = initMode();
        
        Table2.setModel(mode2);
        jScrollPane2.setViewportView(Table2);
        jScrollPane2.getViewport().setBackground(Color.WHITE);
        Table2Label.setText("代码中多出消息");
        Table1Label.setText("接口与代码差异消息");
        
        
        javax.swing.GroupLayout BodyLayout = new javax.swing.GroupLayout(Body);
        Body.setLayout(BodyLayout);
        BodyLayout.setHorizontalGroup(
            BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BodyLayout.createSequentialGroup()
            	    .addGroup(BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(BodyLayout.createSequentialGroup()
                                    .addContainerGap()
                                    .addGroup(BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(Table1Label)
                                        .addComponent(Table2Label))
                                    .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        BodyLayout.setVerticalGroup(
            BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BodyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Table1Label)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Table2Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(Header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap(50, Short.MAX_VALUE))
                        .addComponent(Body, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(Header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Body, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void JarAddrButtonMouseClicked(java.awt.event.MouseEvent evt) {   
    	
    	String JarAddrPath = FileChoose();
    	
    	if (JarAddrPath == null || JarAddrPath.isEmpty())
    	{
    		return;
    	}
    	
    	JarAddrTextField.setText(JarAddrPath);
    }                                          

    private void DocAddrButtonMouseClicked(java.awt.event.MouseEvent evt) {   
    	
    	String DocAddrPath = FileChoose();
    	
    	if (DocAddrPath == null || DocAddrPath.isEmpty())
    	{
    		return;
    	}
    	
    	DocAddrTextField.setText(DocAddrPath);
    }                                          

    private void CheckButtonMouseClicked(java.awt.event.MouseEvent evt) {  
    	
        /**
         * 此处调用比较逻辑
         */
//    	String DocFilePath = DocAddrTextField.getText();
//    	String JarFilePath= JarAddrTextField.getText();
//    	
//    	if (DocFilePath == null || JarFilePath == null || DocFilePath.isEmpty() || JarFilePath.isEmpty())
//    	{
//    		Dialog("提示", "所选文件地址无效", JOptionPane.ERROR_MESSAGE);
//    	}
    	
    	//进行后续操作
    	
    	//获取数据
    	ArrayList<Node> data1 = new Data(0).data;
  
    	dealTable(Table1, data1, mode1);

    	
    	
    	ArrayList<Node> data2 = new Data(10).data;
  
    	dealTable(Table2, data2, mode2);
    	
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckPlain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckPlain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckPlain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckPlain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckPlain().setVisible(true);
            }
        });
    }
    
    
    /*
     * 一些公用的面板组件
     */
    /**
     * 文件选择器，返回文件地址
     * @return
     */
    public static String FileChoose()
    {
    	JFileChooser jfc=new JFileChooser();
		jfc.setFileSelectionMode(JFileChooser.FILES_ONLY);
		jfc.showDialog(new JLabel(), "选择");
		String filePath = null;
		
		try
		{
			File file=jfc.getSelectedFile();
			
			filePath = file.getAbsolutePath();
		}
		catch (Exception e) 
		{
			// TODO: handle exception
			System.out.println(e.getMessage());
		}
		finally
		{
			
			return filePath;
		}
    }
    
    /**
     * 弹框提示
     */
    public static void Dialog(String title, String notice, int MsgType)
    {
    	JOptionPane.showMessageDialog(new JFrame().getContentPane(), 
    			notice, title, MsgType); 
    }
    
    /**
     * 对表的处理
     */
    
    public  void dealTable(javax.swing.JTable table, ArrayList<Node> data, DefaultTableModel mode)
    {
    	mode.getDataVector().removeAllElements();
    	table.updateUI();
    	
    	if (data == null || data.size() == 0)
    	{
    		table.setVisible(false);
    		return;
    	}
    	
    	if (data != null && data.size() != 0)
    	{
    		for (Node node : data)
    		{
    			Object[] rowData = new Object[Num_4];
    			rowData[0] = node.MsgName == null ? "" : node.MsgName;
    			rowData[Num_1] = node.MsgValueInDoc == Integer.MIN_VALUE ? "" : node.MsgValueInDoc;
    			rowData[Num_2] = node.MsgValueInJar == Integer.MIN_VALUE ? "" : node.MsgValueInJar;
    			rowData[Num_3] = node.Notice == null ? "" : node.Notice;
    			
    			mode.addRow(rowData);
    		}
    		
    		setTableAttr(table);
    		System.out.println("here");
    		
    	}
    }
    
    
    /**
     * 初始化数据模式
     */
    public static DefaultTableModel initMode()
    {
    	return new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                    "消息名", "接口中Value值", "Jar包中Value值", "提示"
                }
            ) {
                boolean[] canEdit = new boolean [] {
                    false, false, false, false
                };

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            };
    }
    
    /**
     * 设置表格属性
     */
    public  void setTableAttr(javax.swing.JTable table)
    {
    	  table.setShowHorizontalLines(true);
    	  table.setShowHorizontalLines(true);
    	  table.setCellSelectionEnabled(true);
    	  table.setRowHeight(RowHight);
          
    	  table.setIntercellSpacing(new Dimension(2,2));
    	  table.updateUI();
    }
    
    
    
    DefaultTableModel mode1 = null;
    DefaultTableModel mode2 = null;
    
    int Num_1 = 1;
    int Num_2 = 2;
    int Num_3 = 3;
    int Num_4 = 4;
    int RowHight = 15;
    
    // Variables declaration - dox not modify                     
    private javax.swing.JPanel Body;
    private javax.swing.JButton CheckButton;
    private javax.swing.JButton DocAddrButton;
    private javax.swing.JLabel DocAddrLabel;
    private javax.swing.JTextField DocAddrTextField;
    private javax.swing.JPanel Header;
    private javax.swing.JButton JarAddrButton;
    private javax.swing.JLabel JarAddrLabel;
    private javax.swing.JTextField JarAddrTextField;
    private javax.swing.JTable Table1;
    private javax.swing.JTable Table2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel Table1Label;
    private javax.swing.JLabel Table2Label;
    // End of variables declaration                   
}
;